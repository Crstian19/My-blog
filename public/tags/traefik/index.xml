<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Traefik on Crstian&#39;s blog</title>
    <link>https://blog.crstian.me/tags/traefik/</link>
    <description>Recent content in Traefik on Crstian&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Crstian.me © 2019.  &lt;a href=&#34;https://gohugo.io/&#34;&gt;HUGO&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 15 Jan 2021 00:19:14 +0200</lastBuildDate><atom:link href="https://blog.crstian.me/tags/traefik/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Usar Drone CI/CD con Traefik en NixOS</title>
      <link>https://blog.crstian.me/post/2021-01-15-drone-ci-copy/</link>
      <pubDate>Fri, 15 Jan 2021 00:19:14 +0200</pubDate>
      
      <guid>https://blog.crstian.me/post/2021-01-15-drone-ci-copy/</guid>
      <description>En este post vamos a ver como configurar nuestro propio entorno de CI/CD con Drone, integrado con Traefik como reverse proxy y en NixOS como sistema operativo usando repositorios de github.
En primer lugar necesitamos crar una OAuth application en github y nuestro RPC secret podemos verlo en este post o también en los docs de drone.
Para crear nuestro RPC secret lo haremos de la siguiente forma:
 $ openssl rand -hex 16 bea26a2221fd8090ea38720fc445eca6</description>
    </item>
    
    <item>
      <title>Routing seguro para tus aplicaciones en containers usando Traefik v2 con Let&#39;s Encrypt</title>
      <link>https://blog.crstian.me/post/2020-04-19-routing-seguro-para-sus-aplicaciones-en-containers-usando-traefik-v2-y-lets-encrypt/</link>
      <pubDate>Sun, 19 Apr 2020 00:19:14 +0200</pubDate>
      
      <guid>https://blog.crstian.me/post/2020-04-19-routing-seguro-para-sus-aplicaciones-en-containers-usando-traefik-v2-y-lets-encrypt/</guid>
      <description>Configurar traefik v2 para routing seguro como proxy reverso con HTTPS
Introducción Una configuración robusta de proxy inverso es crítica para cualquier configuración selfhosted que tenga elementos expuestos a través de internet. Si bien los servicios de proxy inverso se utilizan a menudo por razones de equilibrio de carga y seguridad, la mayoría de los propietarios de servidores domésticos los utilizan para enrutar las solicitudes dirigidas a diferentes dominios o subdominios a diferentes hosts o servicios internos.</description>
    </item>
    
  </channel>
</rss>
