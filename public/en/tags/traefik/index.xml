<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Traefik on Crstian&#39;s blog</title>
    <link>https://blog.crstian.me/en/tags/traefik/</link>
    <description>Recent content in Traefik on Crstian&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Crstian.me Â© 2019.  &lt;a href=&#34;https://gohugo.io/&#34;&gt;HUGO&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 15 Jan 2021 00:19:14 +0200</lastBuildDate><atom:link href="https://blog.crstian.me/en/tags/traefik/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Drone CI/CD with Traefik on NixOS</title>
      <link>https://blog.crstian.me/en/post/2021-01-15-drone-ci/</link>
      <pubDate>Fri, 15 Jan 2021 00:19:14 +0200</pubDate>
      
      <guid>https://blog.crstian.me/en/post/2021-01-15-drone-ci/</guid>
      <description>In this post we are going to see how to configure our own CI/CD environment with Drone, integrated with Traefik as reverse proxy and NixOS as operating system using github repositories.
First we need to create an OAuth application in github and our RPC secret can be seen in this post or also in the drone docs.
To create our RPC secret we will do the following:
 $ openssl rand -hex 16 bea26a2221fd8090ea38720fc445eca6</description>
    </item>
    
    <item>
      <title>Secure routing for your containerized applications using Traefik v2 with Let&#39;s Encrypt</title>
      <link>https://blog.crstian.me/en/post/2020-04-19-secure-routing-for-your-containerized-applications-using-traefik-v2-with-lets-encrypt/</link>
      <pubDate>Sun, 19 Apr 2020 00:19:14 +0200</pubDate>
      
      <guid>https://blog.crstian.me/en/post/2020-04-19-secure-routing-for-your-containerized-applications-using-traefik-v2-with-lets-encrypt/</guid>
      <description>Configuring traefik v2 for secure routing as reverse proxy with HTTPS
Introduction A robust reverse proxy configuration is critical for any self-hosted setup that has elements exposed across the Internet. While reverse proxy services are often used for load balancing and security reasons, most home server owners use them to route requests directed to different domains or subdomains to different hosts or internal services. In my case you can see all my services at https://server.</description>
    </item>
    
  </channel>
</rss>
